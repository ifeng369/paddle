


name: paddle-build-linux
on: 
  push:
    paths: 
      - '.github/workflows/paddle-build-linux.yml'

env:
  PADDLE_VERSION: "v3.1.1"
  CUDA_PATH: "/usr/local/cuda-12.9"
jobs:
  build-all:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # - { os: windows-2022, name: win_cu129_cudnn99_sm120, cuda: 12.9.0, cudnn: 9.9.0.52,python: "3.10", cmake_flags: "-DWITH_GPU=ON -DWITH_SHARED_PHI=ON -DCUDA_ARCH_NAME=Manual -DON_INFER=ON -DCUDA_ARCH_BIN=120 -DWITH_UNITY_BUILD=ON" }
          - { os: ubuntu-24.04, name: cu129_cudnn910_sm120, cuda: 12.9.0, cudnn: 9.9.0.52,python: "3.10", cmake_flags: "-DWITH_GPU=ON -DWITH_DISTRIBUTE=ON -DCUDA_ARCH_NAME=Manual -DCUDA_ARCH_BIN=120" }
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}

    - name: Setup dependencies
      shell: bash
      run: |
        if [ "${{ runner.os }}" == "macOS" ]; then
          pip install numpy protobuf wheel ninja --break-system-packages
        else
          pip install numpy protobuf wheel ninja
        fi
        df -h

    # - name: Free Disk Space (Ubuntu)
    #   uses: jlumbroso/free-disk-space@main
    #   with:
    #     # this might remove tools that are actually needed,
    #     # if set to "true" but frees about 6 GB
    #     tool-cache: false
        
    #     # all of these default to true, but feel free to set to
    #     # "false" if necessary for your workflow
    #     android: true
    #     dotnet: true
    #     haskell: true
    #     large-packages: true
    #     docker-images: true
    #     swap-storage: true

    - name: Install 
      shell: bash
      run: |
        df -h
        pwd

        sudo apt remove --purge cmake
        sudo apt autoremove
        wget --no-verbose https://cmake.org/files/v3.18/cmake-3.18.0-Linux-x86_64.tar.gz
        tar -zxf cmake-3.18.0-Linux-x86_64.tar.gz
        rm cmake-3.18.0-Linux-x86_64.tar.gz
        sudo cp -r cmake-3.18.0-Linux-x86_64/* /usr/local/
        cmake --version

        wget --no-verbose https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-ubuntu2404.pin
        sudo mv cuda-ubuntu2404.pin /etc/apt/preferences.d/cuda-repository-pin-600
        wget --no-verbose https://developer.download.nvidia.com/compute/cuda/12.9.1/local_installers/cuda-repo-ubuntu2404-12-9-local_12.9.1-575.57.08-1_amd64.deb
        sudo dpkg -i cuda-repo-ubuntu2404-12-9-local_12.9.1-575.57.08-1_amd64.deb
        sudo cp /var/cuda-repo-ubuntu2404-12-9-local/cuda-*-keyring.gpg /usr/share/keyrings/
        sudo apt-get update
        sudo apt-get -y install cuda-toolkit-12-9
        rm cuda-repo-ubuntu2404-12-9-local_12.9.1-575.57.08-1_amd64.deb


        wget --no-verbose https://developer.download.nvidia.cn/compute/cudnn/redist/cudnn/linux-x86_64/cudnn-linux-x86_64-9.9.0.52_cuda12-archive.tar.xz
        tar xJf cudnn-linux-x86_64-9.9.0.52_cuda12-archive.tar.xz
        rm  cudnn-linux-x86_64-9.9.0.52_cuda12-archive.tar.xz
        cd cudnn-linux-x86_64-9.9.0.52_cuda12-archive
        sudo cp include/* ${{env.CUDA_PATH}}/include/
        sudo cp lib/* ${{env.CUDA_PATH}}/lib64/
        cd ..
        rm -rf cudnn-linux-x86_64-9.9.0.52_cuda12-archive

    - name: Checkout Paddle repo
      uses: actions/checkout@v4
      with:
        repository: PaddlePaddle/Paddle
        ref: ${{env.PADDLE_VERSION}}
        path: paddle-src

    # - name: Apply patches
    #   shell: pwsh
    #   run: |
    #     cd ./paddle-src
    #     Invoke-WebRequest -Uri https://raw.githubusercontent.com/sdcb/PaddleSharp/refs/heads/feature/3.1/build/capi.patch -OutFile capi.patch
    #     git apply --ignore-whitespace capi.patch
    #     rm capi.patch


    - name: Configure with CMake
      shell: bash
      run: |
        pip install -r ./paddle-src/python/requirements.txt
        mkdir ./paddle-src/build
        mkdir -p ./paddle-src/build/paddle/phi/ops/yaml/inconsistent
        mkdir -p ./paddle-src/build/paddle/phi/ops/yaml/legacy

        cd ./paddle-src/build
        cmake .. -GNinja ${{ matrix.cmake_flags }}

    - name: Build with Ninja
      run: |
        cd ./paddle-src/build
        ninja all

    # - name: Show build files
    #   shell: bash
    #   run: |
    #     ls -lR ./paddle-src/build

    - name: Upload paddle_whl
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: ./paddle-src/build/python/dist/*
